====== Herodotos TODO ======

  * Support non-Org mode input files (raw numbers)
  * Compute statistics per sub-directories
  * Support for a computing sub-language (to mix data before plotting)
  * Remove Makefile.patchset (diff should be computed by Herodotos)
  * Support project/pattern/graph in (any) order
  * Use pattern name to name files (instead of the cocci file) -- partially done -- need more test
  * Crash-course/Tuto online in HTML
  * Support SCM other than Git
  * Predefine some colors (see xcolor latex package for instance)
  * Parallel (correlation and graph generation)
  * Parse each bug report (per version)

===== Graphs =====

New kinds of curves:
  * Defect density and density of new defects
    * wrt code size
    * wrt size of new code
    * wrt the number of new files
  * Age pyramid
  * Median age

NOTE: Most of these graphs, will be doable when a computing language will be available.

===== Correlations =====

  * Reorganize: From a 1-1 model to a 1-n model (This should limit user confusion.)
  * Two levels of state
    * Top level: Death (the defect disappear, there is no matching defect in version n+1)
    * Sub level: Same/Unrelated (as currently done)
  * Switch to death if ALL sub-level are unrelated
  * Prune unrelated when top level is death
  * Prune unrelated when a same is defined -> Possibly switch  the top level to SAME and keep only one sub Org link

================================================================================

Conversion Org mode -> HTML page (href link)

Mettre les .cocci en dépendance des commandes findcmd.
Parser CSV pour les .orig.org
Better parsing of org - per version (already sorted)
Compression (avec option "compress", cat + compression, parse + decompression)

Optional:
Statistiques sur le merge entre edit et new

 - Calculer les stat par repertoire (donnÃ©en argument)

Projet
  - Dépôts (sources, tgz, SCM)

Semantic match for sites
  - related SM4B

Descriptif des courbes
  - code size (size)
  - % de var. (relativesize)
  - #, avg, RIP, born
  - lifespan of every bug with details (single)
  - lifespan of every bug (compact)
  - # dans le tps (sum)
  - % dans le tps par rapport à la taille du code (sizerelated)
  - % dans le tps par rapport aux sites (siterelated)

  - Evolution des new bugs with new files

=> Liste des couples (SM4B, projet)
=> associé une couleur & une forme à un couple

Optional info:
Min, Max, Interval, Mark


=========================

== Les leçons du passé ==

Evolution de la densité de nouveaux bugs
 - par rapport à la taille global du code ?
 - par rapport à la taille du nouveaux code
 - par rapport au nombre de nouveaux fichiers ?

Étude de corrélation entre nouveaux bugs et nouveaux fichiers.

Evolution du ratio nouveaux/anciens bugs

Pyramide des ages.

Evolution age
 - median

group set feature
==========================

Liste des SM dispo pour Linux.
 - impact de l'erreur

Qualité du code nouveau.

Application systématique des régles.


==========================

Add "include <path>" directive.
HTML template

Generate the version file

==========================

Langage de template pour les graphs

Utilisation du ratio de changement entre fichiers pour
la détection du renommage de fichier

Proposition
 Réorganisation org mode
 - Top level: occurrences version n
 - Sub level: occurrences version n+1

 State associated to top level: death
 State associated to sub level: same/unrelated
 Sub level occurrences are order by priority.

Switch to death if ALL sub-level are unrelated
Prune unrelated when top level is death
Prune unrelated when a same is defined

=> Moins de risques d'erreurs
=> Moins de propositions

Occurrence identity
 - file, position, token
 - birth: when & where

=========================
Changelog structure if I use upstream
instead of native.

herodotos (0.5.4rc-0ubuntu1) lucid; urgency=low

Changelog for multi-version
Suffix by the following and replace X by the revision starting at 1:

	~804npalixX  (Hardy)
	~810npalixX  (Intrepid)
	~904npalixX  (Jaunty)
	~910npalixX  (Karmic)
	~1004npalixX (Lucid)


